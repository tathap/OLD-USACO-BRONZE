#include <iostream>
#include <algorithm>
#include <vector>
#include <stack>
#include <queue>
#include <math.h>
#include <set>
#include <map>
#include <string>
#include <tuple>
#include <numeric>
#include <climits>
#include <fstream>
using namespace std;

//change the long long to int if you need to save memory/time really badly
typedef long long ll;

//Comment this define when working on interactive problems
#define endl "\n"


#define cout fout
#define cin fin



//const ll MAXN = 1e6 + 1;
const ll zer = 0;
const ll one = 1;
/*const ll inf = LLONG_MAX;
const ll ninf = LLONG_MIN;
*/
const ll MOD = 1e9 + 7;

void solve()
{
    
    ifstream fin ("cowrace.in");
    ofstream fout ("cowrace.out");
        //read in input
    
    ll n, m;
    cin >> n >> m;
    
    /*
    ll bessie[100001];
    ll elsie[100001];
    */
    
    vector <ll> bessie;
    vector <ll> elsie;
    
    ll ct = 0;
    bessie.push_back(0);
    
    for (ll i = 0; i < n; i++) {
        ll a, b;
        cin >> a >> b;
        
        for (ll k = 1; k <= b; k++) {
            //bessie[ct + k] = bessie[ct + k - 1] + a;
            bessie.push_back(bessie[ct + k - 1] + a);
        }
        
        ct += b;
    }
    
    ll ct2 = 0;
    elsie.push_back(0);
    
    for (ll i = 0; i < m; i++) {
        ll a, b;
        cin >> a >> b;
        
        for (ll k = 1; k <= b; k++) {
            //elsie[ct2 + k] = elsie[ct2 + k - 1] + a;
            elsie.push_back(elsie[ct2 + k - 1] + a);
        }
        
        ct2 += b;
    }
    
    ll len = max(ct, ct2);
    
    for (ll i = ct + 1; i <= len; i++) {
        //bessie[i] = bessie[ct];
        bessie.push_back(bessie[ct]);
    }
    
    for (ll i = ct2 + 1; i <= len; i++) {
        //elsie[i] = elsie[ct2];
        elsie.push_back(elsie[ct2]);
    }
    
    ll best = -1; //0 for bessie, 1 for elsie

    ll ans = 0;
    
    for (ll i = 1; i <= len; i++) {
        if (bessie[i] > elsie[i]) {
            if (best == -1) {
                best = 0;
            } else if (best == 1) {
                best = 0;
                ans++;
            }
        } else if (elsie[i] > bessie[i]) {
            if (best == -1) {
                best = 1;
            } else if (best == 0) {
                best = 1;
                ans++;
            }
        }
    }
    
    cout << ans << endl;
    
    return;
}


int main()
{
    ll t = one;
    
    while (t--) {
        solve();
    }
}

